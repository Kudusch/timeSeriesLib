?substitute(value)
install.packages('lubridate')
library(lubridate)
library("Rcpp", lib.loc="~/Library/R/3.4/library")
update_packages(Rcpp)
update_packages('Rcpp')
library(lubridate)
old.packages()
update.packages()
old.packages()
install.packages("Rcpp")
install.packages("Rcpp")
library(lubridate)
?lubridate
ymd_hms('2018-02-07 16:42')
ymd_hms('2018-02-07 16:42', tz = "UTC+01:00")
ymd_hms('2018-02-07 16:42', quiet = FALSE, tz = "UTC+01:00", locale = Sys.getlocale("LC_TIME"),
truncated = 0)
ymd_hms('2018-02-07 16:42', quiet = FALSE, tz = "UTC+01:00", locale = Sys.getlocale("LC_TIME"),truncated = 0)
ymd_hms('2018-02-07 16:42', quiet = FALSE, tz = "Europe/Berlin", locale = Sys.getlocale("LC_TIME"),truncated = 0)
x <- c("2011-12-31 12:59:59", "2010-01-01 12:00:00"); ymd_hms(x)
ymd_hms('2018-02-07 16:42:20', tz = "UTC+01:00")
ymd_hms('2018-02-07 16:42:20', tz = "UTC+01")
ymd_hms('2018-02-07 16:42:20', tz = "UTC+1")
ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin)
""
"
ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin")
ymd_hms('2018-02-07 16:42:20', tz = "CET")
ymd_hms('2018-02-07 16:42:20')
ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin")
ymd_hms('2018-02-07 16:42:20', tz = "UTC+01:00")
ymd_hms('2018-02-07 16:42:20', tz = "UTC+1")
ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin")
ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin", quiet = T)
as.numeric(ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin", quiet = T)=
Date <- ymd_hms('2018-02-07 16:42:20', tz = "Europe/Berlin", quiet = T)
Date
as.numeric(Date)
Date <- ymd_hms('2018-02-07 16:42:20', tz = "CET", quiet = T)
Date
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
tsbuild(raw, V104_start, V105_end, V202_bezug)
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
test[1]
test[1,]
test[1][1]
test$TSstart
test$TSstart[1]
library(tsbuilder)
devtools::document()
library(readr)
raw <- read_csv("~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/example/in.csv")
View(raw)
tsbuild(raw, V104_start, V105_end, V202_bezug)
library(tsbuilder)
library(lubridate)
tsbuild(raw, V104_start, V105_end, V202_bezug)
tsbuild(raw, V104_start, V105_end, V202_bezug)
library(tsbuilder)
tsbuild(raw, V104_start, V105_end, V202_bezug)
library(lubridate)
tsbuild(df)
library(tsbuilder)
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
library(anytime)
install.packages('anytime')
library(anytime)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
anytime("2018-02-07 16:42:20")
as.numeric(anytime("2018-02-07 16:42:20"))
?anytime("2018-02-07 16:42:20")
anytime("2018-02-07 16:42:20", tz = "Europe/Berlin")
as.numeric(anytime("2018-02-07 16:42:20", tz = "Europe/Berlin"))
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
?apply()
library(lubridate)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
View(test)
test <- tsbuild(raw, V104_start, V105_end, V202_bezug)
View(raw)
raw <- read_csv("~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/example/in.csv")
View(raw)
library(readr)
raw <- read_csv("~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/example/in.csv")
View(raw)
?parse_date_time("00:00:21","hms")
library(lubridate)
?parse_date_time("00:00:21","hms")
parse_date_time("00:00:21","H!M!S!")
x <- parse_date_time("00:00:21","H!M!S!")
y <- parse_date_time("00:00:23","H!M!S!")
x-y
as.numeric(x-y)
as.numeric(y-x)
y <- parse_date_time("00:00:21","H!M!S!")
as.numeric(y-x)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
unique(raw$V202_bezug)
sort(unique(raw$V202_bezug))
sort(as.character(unique(raw$V202_bezug)))
sort(as.character(unique(raw$V202_bezug)))
sort(as.character(unique(raw$V202_bezug)))
sort(as.character(unique(raw$V202_bezug)))
names(raw$V202_bezug)
raw$V202_bezug
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
import("lubridate")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
?library(lubridate)
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
View(test)
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
#' @return A time-series object based on \code{df}.
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
View(test)
View(raw)
library(readr)
raw <- read_csv("~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/example/in.csv")
View(raw)
library(tsbuilder)
library("Rcpp", lib.loc="~/Library/R/3.4/library")
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
View(raw)
library(tsbuilder)
devtools::document()
devtools::document()
strptime("00:22:22", "%H:%M:%S")
strptime("00:22:22", "%H:%M:%S")-2
strptime("00:22:22", "%H:%M:%S")-strptime("00:22:22", "%H:%M:%S")
strptime("00:22:22", "%H:%M:%S")-strptime("00:22:23", "%H:%M:%S")
strptime("00:22:22", "%H:%M:%S")-strptime("00:22:21", "%H:%M:%S")
as.numeric(strptime("00:22:22", "%H:%M:%S")-strptime("00:22:21", "%H:%M:%S"))
devtools::document()
library(tsbuilder)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
View(test)
View(raw)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
detach("package:tsbuilder", unload=TRUE)
View(raw)
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "H!M!S!")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "%H:%M:%S")
?strptime(x, "%m/%d/%y %H:%M:%S")
format(Sys.time(), "%S")
format(Sys.time(), "%y")
format(Sys.time(), "%Y")
format(Sys.time(), "%Y-%m-%d")
strptime(x, "%m/%d/%y %H:%M:%S")
strptime("00:02:21", "%H:%M:%S")
strptime("00:02:21", "%H:%M:%S")-format(Sys.time(), "%Y-%m-%d")
strptime("00:02:21", "%H:%M:%S")-Sys.time()
as.Date(strptime("00:02:21", "%H:%M:%S")-format(Sys.time(), "%Y-%m-%d"))
strptime("00:02:21", "%H:%M:%S")-format(Sys.time(), "%Y-%m-%d")
strptime("00:02:21", "%H:%M:%S")-Sys.time()
as.Date(strptime("00:02:21", "%H:%M:%S")-Sys.time())
strptime("00:02:21", "%H:%M:%S")-Sys.time()
as.numberic(strptime("00:02:21", "%H:%M:%S")-Sys.time())
as.numeric(strptime("00:02:21", "%H:%M:%S")-Sys.time())
strptime("18:02:21", "%y:%m:%d")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "%H:%M:%S")
paste('asd', 'gg', sep = '_')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = V202_bezug, TSformat = "%H:%M:%S")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = c(V202_bezug,V203_thema), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, value = c(V202_bezug,V203_thema), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c(V202_bezug,V203_thema), TSformat = "%H:%M:%S")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
sort(test)
sort(test, decreasing = T)
sort(test, decreasing = T)[1]
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
View(raw)
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
View(test)
names(test)
names(test)[1]
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
length(test)
nrow(test)
1:nrow(test)
nrow(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
ncol
ncol(test)
3:ncol(test)
4:ncol(test)
4:4
4:ncol(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test[4]
test[4,1]
test[1,4]
test[2,4]
test[3,4]
test[3,5]
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test[1,]
test[1,][1]
test[1,1]
test[1,2]
test[1,3]
test[1,4]
test[1,5]
as.numeric(test[1,1], units="secs")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
TSdata <- test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
TSout <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
View(TSdata)
View(TSout)
strptime("00:23:10",TSformat)
strptime("00:23:10","%H:%M:%S")
as.character(strptime("00:23:10","%H:%M:%S"))
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
View(test)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
sort(unique(TSdata$TSstart))[1]
sort(unique(TSdata$TSstart))
sort(TSdata$TSstart)
sort(TSdata$TSstart)[1]
raw$V104_start
sort(raw$V104_start)
sort(raw$V104_start)[1]
View(raw)
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
name(TSdata)
names(TSdata)
names(TSdata)[4]
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
TSout[as.numeric((TSdata$TSstart[1])-min, units="secs"),paste(names(TSdata)[v], as.character(TSdata[1,4]), sep = '_')]
TSout[1,paste(names(TSdata)[4], as.character(TSdata[1,4]), sep = '_')]
as.character(TSdata[1,4]), sep = '_')
as.character(TSdata[1,4]), sep = '_')
as.character(TSdata[1,4], sep = '_')
paste(names(TSdata)[4], as.character(TSdata[1,4]), sep = '_')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
test
View(test)
as.numeric((TSdata$TSstart[1])-min, units="secs")
min <- sort(unique(TSdata$TSstart))[1]
min
as.numeric((TSdata$TSstart[1])-min, units="secs")
as.numeric((TSdata$TSstart[2])-min, units="secs")
as.numeric((TSdata$TSstart[3])-min, units="secs")
as.numeric((TSdata$TSstart[4])-min, units="secs")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
test <- tsbuild(raw, TSstart = V104_start, TSstop = V105_end, values = c('V202_bezug','V203_thema'), TSformat = "%H:%M:%S")
source('~/Documents/Projekte/Eigene Arbeit/timeSeriesLib/tsbuilder/R/tsbuild.R')
#' Build a time-series object from case-based data.
#'
#' @param df A data frame.
#' @param TSstart Time stamp.
#' @param TSstop Time stamp.
#' @param values Values to aggregate.
#' @param TSformat A string containing the TS format. Defaults to "YYYY-MM-DD HH:MM:SS"
#' @return A time-series object based on \code{df}.
#' @examples
#' tsbuild(df)
tsbuild <- function(df, TSstart, TSstop = TSstart, values, TSformat = "YYYY-MM-DD HH:MM:SS") {
# generate empty time series
# for each row in df
# get time stamp or intervall & value
# add to row(s) in ts-df
TSstart <- eval(substitute(TSstart),df, parent.frame())
TSstart <- strptime(TSstart,TSformat)
TSstop <- eval(substitute(TSstop),df, parent.frame())
TSstop <- strptime(TSstop,TSformat)
dur <- as.numeric(TSstop-TSstart, units="secs")+1
TSdata <- data.frame(TSstart,TSstop,dur)
max <- sort(unique(TSdata$TSstop), decreasing = T)[1]
min <- sort(unique(TSdata$TSstart))[1]
len <- as.numeric(max-min, units="secs")
TSout <- data.frame(seq(1,len))
names(TSout)[1] <- "n"
for (value in values) {
valueList <- sort(as.character(unique(df[[value]])))
TSdata[[value]] <- df[[value]]
for (v in valueList) {
TSout[[paste(value, v, sep = '_')]] <- 0
}
}
for(n in 1:nrow(TSdata)) {
for(v in 4:ncol(TSdata)) {
for (t in 1:TSdata[n,3]) {
TSout[paste(names(TSdata)[v], as.character(TSdata[n,v]), sep = '_'),as.numeric((TSdata$TSstart[4])-min, units="secs")] <- (TSout[paste(names(TSdata)[v], as.character(TSdata[n,v]), sep = '_'),as.numeric((TSdata$TSstart[4])-min, units="secs")])+1
}
#do something to the data
}
}
return(TSout)
}
#' Build a time-series object from case-based data.
#'
#' @param df A data frame.
#' @param TSstart Time stamp.
#' @param TSstop Time stamp.
#' @param values Values to aggregate.
#' @param TSformat A string containing the TS format. Defaults to "YYYY-MM-DD HH:MM:SS"
#' @return A time-series object based on \code{df}.
#' @examples
#' tsbuild(df)
tsbuild <- function(df, TSstart, TSstop = TSstart, values, TSformat = "YYYY-MM-DD HH:MM:SS") {
# generate empty time series
# for each row in df
# get time stamp or intervall & value
# add to row(s) in ts-df
TSstart <- eval(substitute(TSstart),df, parent.frame())
TSstart <- strptime(TSstart,TSformat)
TSstop <- eval(substitute(TSstop),df, parent.frame())
TSstop <- strptime(TSstop,TSformat)
dur <- as.numeric(TSstop-TSstart, units="secs")+1
TSdata <- data.frame(TSstart,TSstop,dur)
max <- sort(unique(TSdata$TSstop), decreasing = T)[1]
min <- sort(unique(TSdata$TSstart))[1]
len <- as.numeric(max-min, units="secs")
TSout <- data.frame(seq(1,len))
names(TSout)[1] <- "n"
for (value in values) {
valueList <- sort(as.character(unique(df[[value]])))
TSdata[[value]] <- df[[value]]
for (v in valueList) {
TSout[[paste(value, v, sep = '_')]] <- 0
}
}
for(n in 1:nrow(TSdata)) {
for(v in 4:ncol(TSdata)) {
for (t in 1:TSdata[n,3]) {
TSout[paste(names(TSdata)[v], as.character(TSdata[n,v]), sep = '_'),as.numeric((TSdata$TSstart[4])-min, units="secs")] <- (TSout[paste(names(TSdata)[v], as.character(TSdata[n,v]), sep = '_'),as.numeric((TSdata$TSstart[4])-min, units="secs")])+1
}
#do something to the data
}
}
return(TSout)
}
